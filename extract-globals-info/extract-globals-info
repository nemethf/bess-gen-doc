#!/usr/bin/env python
#                                                -*- coding: utf-8 -*-

# Copyright (C) 2018 by Felicián Németh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

import json
import re
import subprocess
import sys

sys.path.append('/bess')
from pybess import bess

def start_bessd():
    subprocess.call(['/bess/bin/bessd', '-m', '0'])

def main():
    start_bessd()
    b = bess.BESS()
    b.connect()
    globals = []
    for mclass_name in b.list_mclasses().names:
        info = b.get_mclass_info(mclass_name)
        cmds = []
        for cmd, arg in zip(info.cmds, info.cmd_args):
            cmds.append({'cmd': cmd, 'arg': arg})
        globals.append({
            'type': 'mclass',
            'name': info.name,
            'help': info.help,
            'cmds': cmds
        })
    for driver_name in b.list_drivers().driver_names:
        info = b.get_driver_info(driver_name)
        cmds = []
        for cmd in info.commands:
            # It's a TODO item in bess_msg.proto
            if cmd:
                cmds.append({'cmd': cmd})

        globals.append({
            'type': 'driver',
            'name': info.name,
            'help': info.help,
            'cmds': cmds
        })
    match = re.search(r'"(.*)"', str(b.get_version()))
    if match:
        version = match.group(1)
    else:
        version = 'unknown'
    db = {'globals': globals, 'bess-version': version}
    with open('/out/globals.json', 'w') as f:
        json.dump(db, f, indent=2, sort_keys=True, separators=(',', ': '))


if __name__ == '__main__':
    main()
